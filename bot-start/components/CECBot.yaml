#metadata: information about the flow#  platformVersion: the version of the bots platform that this flow was written to work with metadata:  platformVersion: 1.0main: truename: CECBot#context: Define the variables which will used throughout the dialog flow here.context:  variables:    iResult: "nlpresult"    keyword: "string"  #The syntax for defining the variables is variablename: "variableType".# The "variableType" can be defined as a primitive type ("int", "string", "boolean"), "list", or an entity name. A variable can also hold the results returned by the Intent Engine. For these variables, the "variableType" must be "nlpresult" (for example, iResult: "nlpresult").    greeting: "string"    name: "string"#states is where you can define the various states within your flow.# The syntax for defining a state is# statename:#   component:Specify the component you want to use. This can be either a Built-In or custom component.#   properties:#     property1: "value" (These are the properties to the specified component#   transitions: You can specify one of the following four#     next: Specify the state you want to execute next after this state. By default it will execute the state specified after this#     error: Specify the state you want to execute in case the component encounters any error in execution.#     actions: You can handle various actions returned by the components here the syntax is actionName: "statename"#        action1: state1#     return: "done" You can exit the flow using the return statement#states:#  askGreeting:#    component: "System.List"#    properties:#      options: "Hello!, Ola!, Vannakam!, Namaste!"#      prompt: "Hi there! What would you like me to echo back?"#      variable: "greeting"#  askName:#    component: "System.Text"#    properties:#     prompt: "What is your name?"#     variable: "name"#  start:#    component: "System.Output"#    properties:#      text: "${greeting.value}  ${name.value}"#    transitions:#      return: "done"     states:  getInput:    component: "System.Intent"    properties:      variable: "iResult"      confidenceThreshold: 0.4    transitions:      actions:        Knowledge: "startSearch"        Greeting: "initializing"        unresolvedIntent: "unresolved"  startSearch:    component: "System.SetVariable"    properties:      variable: "keyword"      value: "${iResult.value.entityMatches['keyword'][0]}"    transitions: {}   start:    component: "KnowItAll"    properties:      nlpVariable: "${keyword.value}"    transitions:      return: "done"       unresolved:    component: "System.Output"    properties:      text: "No good, dunno"    transitions:      return: "done"  initializing:    component: "InitPublicLink"    transitions:      return: "done"  